// file: simple.lambda
// Project: Computing Simulator
// author: dp
lambda
0: (\f x.(x))
1: (\f x.(f x))
2: (\f x.(f (f x)))
3: (\f x.(f (f (f x))))
4: (\f x.(f (f (f (f x)))))
5: (\f x.(f (f (f (f (f x))))))
6: (\f x.(f (f (f (f (f (f x)))))))
SUCC: (\n.(\f x.(f (n f x))))
PRED: (\n f x.((((n (\g h.(h (g f)))) (\u.(x))) (\u.(u)))))
ADD: (\a b.(a SUCC b))
SUB: (\a b.(a PRED b))
MULT: (\n m f.(n (m f )))
U: (\x y.(y (x x y)))
TETA: (U U)
TRUE: (\x y.(x))
FALSE: (\x y.(y))
AND: (\p q.(p q p))
OR: (\p q.(p p q))
NOT: (\p.(p FALSE TRUE))
IFTHANELSE: (\p a b.(p a b))
ISZERO: (\n.(n (\x.(FALSE)) TRUE))
F: (\f n.(IFTHANELSE (ISZERO n) (SUCC n) (MULT n (f (PRED n)))))
FACT: (TETA F)