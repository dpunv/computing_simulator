// file: simple.lambda
// Project: Computing Simulator
// author: dp
lambda
0: (\f x.(x))
1: (\f x.(f x))
2: (\f x.(f (f x)))
3: (\f x.(f (f (f x))))
4: (\f x.(f (f (f (f x)))))
5: (\f x.(f (f (f (f (f x))))))
6: (\f x.(f (f (f (f (f (f x)))))))
7: (\f x.(f (f (f (f (f (f (f x))))))))
8: (\f x.(f (f (f (f (f (f (f (f x)))))))))
9: (\f x.(f (f (f (f (f (f (f (f (f x))))))))))
10: (\f x.(f (f (f (f (f (f (f (f (f (f x)))))))))))
11: (\f x.(f (f (f (f (f (f (f (f (f (f (f x))))))))))))
12: (\f x.(f (f (f (f (f (f (f (f (f (f (f (f x)))))))))))))
13: (\f x.(f (f (f (f (f (f (f (f (f (f (f (f (f x))))))))))))))
14: (\f x.(f (f (f (f (f (f (f (f (f (f (f (f (f (f x)))))))))))))))
15: (\f x.(f (f (f (f (f (f (f (f (f (f (f (f (f (f (f x))))))))))))))))
SUCC: (\n.(\f x.(f (n f x))))
PRED: (\n f x.((((n (\g h.(h (g f)))) (\u.(x))) (\u.(u)))))
ADD: (\a b.(a SUCC b))
SUB: (\a b.(a PRED b))
MULT: (\n m f.(n (m f )))
U: (\x y.(y (x x y)))
TETA: (U U)
TRUE: (\x y.(x))
FALSE: (\x y.(y))
AND: (\p q.(p q p))
OR: (\p q.(p p q))
NOT: (\p.(p FALSE TRUE))
IF_THAN_ELSE: (\p a b.(p a b))
IS_ZERO: (\n.(n (\x.(FALSE)) TRUE))
F: (\f n.(IF_THAN_ELSE (IS_ZERO n) (SUCC n) (MULT n (f (PRED n)))))
FACT: (TETA F)
PAIR: (\a b f.(f a b))
FIRST: (\p.(p TRUE))
SECOND: (\p.(p FALSE))
NIL: (\x.(TRUE))
PUSH: (\x y.(PAIR x y))
IS_NIL: (\l.(l (\x y.(TRUE)) FALSE FALSE))
EQ: (\x y.((AND (IS_ZERO (SUB y x))(IS_ZERO (SUB x y)))))
// specific to simulate the Turing Machine
MOVE_LEFT: (\s t.((TAPE (IF_THAN_ELSE (IS_NIL (FIRST t)) NIL (SECOND (FIRST (t)))) (IF_THAN_ELSE (IS_NIL (FIRST t)) (PUSH 0 (PUSH s (SECOND t)))))))
MOVE_RIGHT: (\s t.((TAPE (PUSH s (FIRST (t))) (IF_THAN_ELSE (IS_NIL (SECOND t)) NIL (SECOND (SECOND t))))))
MOVE_STAY: (\s t.((TAPE (FIRST t) (PUSH s (IF_THAN_ELSE (IS_NIL (SECOND t)) (SECOND t) (SECOND (SECOND t)))))))
TAPE: (\l r.(PAIR l r))
CONFIG: (\s t.(PAIR s t))


MOVE_EX: (\c.(IF_THAN_ELSE (EQ (FIRST c) 0) (IF_THAN_ELSE (EQ (FIRST (SECOND (SECOND c))) 1) (CONFIG 0 (MOVE_RIGHT 0 (SECOND c))) (IF_THAN_ELSE (EQ (FIRST (SECOND (SECOND c))) 2) (CONFIG 0 (MOVE_RIGHT 0 (SECOND c))) (CONFIG 10 (MOVE_STAY 0 (SECOND c))))) (CONFIG 10 (MOVE_STAY 0 (SECOND c)))))
LEFT_EX: (NIL)
RIGHT_EX: (PAIR 1 (PAIR 2 NIL))
CONFIG_EX: (CONFIG 0 LEFT_EX RIGHT_EX)
MOVE_EX_EXECUTION: (MOVE_EX CONFIG_EX)