// file: tm over ram.ram
// Project: Computing Simulator
// author: dp
// ram machine that simulates the universal turing machine
// just with a different encoding for the machine
// to make it compliant with the 0/1 alphabet of the RAM
ram
INIT TAPE_START
ST TAPE_START_POS
INIT TAPE_START
ST TAPE_END_POS
INIT 0
ST HEAD_POS
INIT INIT_STATE
ST STATE_POS
INIT 1
ST ONE_POS
INIT ACCEPT_STATE
ST ACCEPT_STATE_POS
INIT REJECT_STATE
ST REJECT_STATE_POS
INIT HALT_STATE
ST HALT_STATE_POS
INIT BLANK_CHAR
ST TAPE_START
L HEAD_POS
A ONE_POS
ST HEAD_POS
A TAPE_START
MOV
RESTART_LOOP_INPUT_COPY R 1
CJUMP START_MAIN
MIR 1
L HEAD_POS
A TAPE_START_POS
MOV
R SYMBOL_SIZE
MIR SYMBOL_SIZE
STD
L HEAD_POS
A ONE_POS
ST HEAD_POS
JUMP RESTART_LOOP_INPUT_COPY
START_MAIN MIR 1
L HEAD_POS
// A ONE_POS
A TAPE_START_POS
ST TAPE_END_POS
INIT 1
ST HEAD_POS
A TAPE_START_POS
MOV
START_MAIN_LOOP R STATE_SIZE
MIR STATE_SIZE
S STATE_POS
CJUMP IS_STATE
MIR SYMBOL_SIZE
MIR STATE_SIZE
MIR SYMBOL_SIZE
MIR 2
R 1
MIR 1
CJUMP HALT_POS
JUMP START_MAIN_LOOP
IS_STATE R SYMBOL_SIZE
MIR SYMBOL_SIZE
ST TEMP
LD
S TEMP
CJUMP IS_SYMBOL
MIR STATE_SIZE
MIR SYMBOL_SIZE
MIR 2
R 1
MIR 1
CJUMP HALT_POS
JUMP START_MAIN_LOOP
IS_SYMBOL R STATE_SIZE
ST STATE_POS
MIR STATE_SIZE
R SYMBOL_SIZE
STD
MIR SYMBOL_SIZE
R 2
MIR 2
CJUMP END_DIR
S ONE_POS
CJUMP LEFT
// Move head right
L HEAD_POS
A ONE_POS
ST HEAD_POS
A TAPE_START_POS
MOV
S TAPE_END_POS
CJUMP CONTINUE
JUMP GO_END
CONTINUE L TAPE_END_POS
A ONE_POS
ST TAPE_END_POS
S ONE_POS
INIT BLANK_CHAR
STD
GO_END JUMP END_DIR
// Move head left
LEFT L HEAD_POS
S ONE_POS
CJUMP COPY
JUMP NO_COPY
COPY L TAPE_START_POS
ST TEMP_2
INIT BLANK_CHAR
ST TEMP_3
CYCLE_COPY L TEMP_2
MOV
A ONE_POS
ST TEMP_2
LD
ST TEMP
L TEMP_3
STD
L TEMP
ST TEMP_3
L TEMP_2
S ONE_POS
S TAPE_END_POS
CJUMP END_COPY
JUMP CYCLE_COPY
END_COPY L TAPE_END_POS
A ONE_POS
ST TAPE_END_POS
INIT 1
ST HEAD_POS
JUMP SKIP_NO_COPY
NO_COPY ST HEAD_POS
A TAPE_START_POS
MOV
// INIT BLANK_CHAR
// why before skip_no_copy was here?
// STD
// Cannot have two labels on the same row, inserting two rows or change one label
END_DIR L STATE_POS
SKIP_NO_COPY L STATE_POS
S ACCEPT_STATE_POS
CJUMP END_START
L STATE_POS
S REJECT_STATE_POS
CJUMP END_START
L STATE_POS
S HALT_STATE_POS
CJUMP END_START
NO_START MIL 2
MIL SYMBOL_SIZE
MIL STATE_SIZE
MIL SYMBOL_SIZE
MIL STATE_SIZE
MIL 1
R 1
S ONE_POS
CJUMP NO_START
MIR 1
L HEAD_POS
A TAPE_START_POS
MOV
JUMP START_MAIN_LOOP
END_START L STATE_POS
W
L TAPE_START_POS
ST TEMP
END_LOOP L TEMP
S TAPE_END_POS
CJUMP HALT_POS
L TEMP
MOV
LD
W
L TEMP
A ONE_POS
ST TEMP
JUMP END_LOOP
HALT_POS H
// fixed memory cells:
TAPE_START_POS
TAPE_END_POS
HEAD_POS
STATE_POS
ONE_POS
ACCEPT_STATE_POS
REJECT_STATE_POS
HALT_STATE_POS
TEMP
TEMP_2
TEMP_3
TAPE_START